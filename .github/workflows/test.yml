name: Tests

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - 'master'

jobs:
  php-cs-fixer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Run PHP-CS-Fixer
        uses: prestashopcorp/github-action-php-cs-fixer@master

  test:
    name: Run tests
    runs-on: ubuntu-latest
    env:
      # Change these values depending on project.
      ps-module-name: mollie
      project-workspace-dir: ${{ github.workspace }}/../workspace
    strategy:
      matrix:
        PS: [ 1.7.8-7.1 ]
        testsuite: [ lint, phpstan, unit, integration ]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Swap Space
        uses: Invertus/set-swap-space@master
        with:
          swap-size-gb: 10

      - name: Setup PS module workspace
        uses: Invertus/setup-ps-module-workspace@1.0.2
        with:
          ps-module-name: ${{ env.ps-module-name }}
          ps-version-dockerhub-tag: ${{ matrix.PS }}
          project-workspace-dir: ${{ env.project-workspace-dir }}
          ps-module-workspace-private-key: ${{ secrets.PS_MODULE_WORKSPACE_PRIVATE_KEY }}

      - name: Run PrestaShop
        run: |
          (cd ${{ env.project-workspace-dir }} && docker compose up -d)

      - name: Healthcheck
        run: |
          timeout 120s sh -c 'until docker ps | grep ${{ env.ps-module-name }}-ps-prestashop-${{ matrix.PS }} | grep -q "(healthy)"; do echo "Waiting for container to be healthy..."; sleep 1; done'

      - name: Cache composer folder
        uses: actions/cache@v3
        with:
          path: ${{ env.project-workspace-dir }}/prestashop/${{ matrix.PS }}/modules/${{ env.ps-module-name }}/vendor
          key: ${{ github.sha }}

      - name: Module composer install
        run: (cd ${{ env.project-workspace-dir }} && make module-composer-install)

      - name: Remove conflicting modules
        run: docker exec -i ${{ env.ps-module-name }}-ps-prestashop-${{ matrix.PS }} bash -c "cd /var/www/html && rm -rf modules/ps_checkout"

      - name: Install module
        run: docker exec -i ${{ env.ps-module-name }}-ps-prestashop-${{ matrix.PS }} bash -c "cd /var/www/html && php bin/console prestashop:module install ${{ env.ps-module-name }}"

      - name: Run ${{ matrix.testsuite }} tests
        run: docker exec -i ${{ env.ps-module-name }}-ps-prestashop-${{ matrix.PS }} bash -c "cd /var/www/html/modules/${{ env.ps-module-name }} && make ci-${{ matrix.testsuite }} ps_version_tag=${{ matrix.PS }}"

  prepare-zip:
    name: Prepare module ZIP artifact
    runs-on: ubuntu-latest
    needs: [ test ]
    env:
      MODULE_NAME: mollie
    steps:
      # todo ask for permissions to add cancel previous workflow action
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build module ZIP
        run: |
          composer install --no-dev --optimize-autoloader --classmap-authoritative
          composer dump-autoload --no-dev --optimize --classmap-authoritative
          rm -rf .git .github tests .php-cs-fixer.php Makefile cypress* docker-compose*.yml package.json package-lock.json .docker
          mkdir ${{ env.MODULE_NAME }}
          rsync -Rr ./ ./${{ env.MODULE_NAME }}
          shopt -s extglob
          rm -r !(${{ env.MODULE_NAME }})
          find . -maxdepth 1 -type f -exec rm "{}" \;
          cd ${{ env.MODULE_NAME }} && rm -rf ${{ env.MODULE_NAME }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.MODULE_NAME }}
          path: ./
